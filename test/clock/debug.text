Script started on Paz 15 Eki 2017 17:17:22 +03
]0;mehmet@desktop: ~/Documents/f4/test/clock[01;32mmehmet@desktop[00m:[01;34m~/Documents/f4/test/clock[00m$ make
arm-none-eabi-gcc -I../../lib/cmsis/inc -I../../lib/std_periph/inc -I. -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DHSE_VALUE=8000000 -std=gnu99 -Wall -Wextra -Warray-bounds -Wno-unused-parameter  -Wno-unused-variable -Wno-strict-aliasing -mlittle-endian -mthumb -mcpu=cortex-m4 -mthumb-interwork -mfloat-abi=hard -mfpu=fpv4-sp-d16 -Tstm32f4-discovery.ld --specs=nosys.specs  -Wl,-Map=build/template.map  main.c stm32f4xx_it.c system_stm32f4xx.c f4board.c startup_stm32f40_41xxx.s ../../lib/std_periph/src/misc.c ../../lib/std_periph/src/stm32f4xx_dbgmcu.c ../../lib/std_periph/src/stm32f4xx_exti.c ../../lib/std_periph/src/stm32f4xx_gpio.c ../../lib/std_periph/src/stm32f4xx_rcc.c ../../lib/std_periph/src/stm32f4xx_tim.c -g -o build/template.elf
arm-none-eabi-objcopy -O ihex build/template.elf   build/template.hex
arm-none-eabi-objcopy -O binary build/template.elf build/template.bin
]0;mehmet@desktop: ~/Documents/f4/test/clock[01;32mmehmet@desktop[00m:[01;34m~/Documents/f4/test/clock[00m$ make debug
gnome-terminal --command="st-util"
arm-none-eabi-gdb ./build/template.elf -ex "tar extended-remote :4242" -ex "load"
GNU gdb (GNU Tools for ARM Embedded Processors 6-2017-q2-update) 7.12.1.20170417-git
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "--host=x86_64-pc-linux-gnu --target=arm-none-eabi".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./build/template.elf...done.
Remote debugging using :4242
Reset_Handler () at startup_stm32f40_41xxx.s:75
75	  movs  r1, #0
Loading section .isr_vector, size 0x188 lma 0x8000000
Loading section .eh_frame, size 0x4 lma 0x8000188
Loading section .ARM.exidx, size 0x8 lma 0x800018c
Loading section .text, size 0x3c4c lma 0x8000194
Loading section .init, size 0xc lma 0x8003de0
Loading section .fini, size 0xc lma 0x8003dec
Loading section .data, size 0x45c lma 0x8003df8
Loading section .init_array, size 0x4 lma 0x8004254
Loading section .fini_array, size 0x4 lma 0x8004258
Loading section .jcr, size 0x4 lma 0x800425c
Loading section .init_array.00000, size 0x4 lma 0x8004260
Start address 0x80007f4, load size 16996
Transfer rate: 6 KB/sec, 1545 bytes/write.
(gdb) b RCC_GET[K[KetClocksFreq 
Breakpoint 1 at 0x8001600: file ../../lib/std_periph/src/stm32f4xx_rcc.c, line 1319.
(gdb) c
Continuing.
Note: automatically using hardware breakpoints for read-only addresses.

Breakpoint 1, RCC_GetClocksFreq (RCC_Clocks=0x2001ffe8)
    at ../../lib/std_periph/src/stm32f4xx_rcc.c:1319
1319	  uint32_t tmp = 0, presc = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
(gdb) fin
find    finish  
(gdb) finish 
Run till exit from #0  RCC_GetClocksFreq (RCC_Clocks=0x2001ffe8)
    at ../../lib/std_periph/src/stm32f4xx_rcc.c:1319
main () at main.c:14
14		if (SysTick_Config(SystemCoreClock / 1000)) {
(gdb) p r
$1 = {SYSCLK_Frequency = 168000000, HCLK_Frequency = 168000000, 
  PCLK1_Frequency = 42000000, PCLK2_Frequency = 84000000}
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;mehmet@desktop: ~/Documents/f4/test/clock[01;32mmehmet@desktop[00m:[01;34m~/Documents/f4/test/clock[00m$ exit
exit

Script done on Paz 15 Eki 2017 17:18:15 +03
