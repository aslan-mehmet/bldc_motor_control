#include <math.h>
#include <slope/slope.h>
#include <stdio.h>

SlopeScale *scale;
SlopeItem *series;
double *x, *y;
const int n = 100;
const double dx = 4.0 * G_PI / 100; // 2 period in frame
GtkWidget *chart;

static gboolean timer_callback(GtkWidget *chart)
{
	static long count = 0;
	static int indx = 0;
	
	/* if (count > n-1) { */
	/* 	slope_xyscale_set_x_range(SLOPE_XYSCALE(scale), (count-(n-1))*dx, count*dx); */
	/* } */

	if (indx == n) {
		indx = 0;
	}

	//x[indx] = count * dx;
	y[indx] = sin(count*dx);
	
	++indx;
	++count;

	slope_xyseries_update(SLOPE_XYSERIES(series));
//	slope_xyseries_set_data(SLOPE_XYSERIES(series), x, y, n);
	slope_chart_redraw(SLOPE_CHART(chart));
	return TRUE;
}

int main(int argc, char **argv)
{
	gtk_init(&argc, &argv);
	chart = slope_chart_new();
	g_signal_connect(G_OBJECT(chart), "destroy", G_CALLBACK(gtk_main_quit), NULL);

	/* create some sinusoidal data points */
	x = g_malloc(n * sizeof(double));
	y = g_malloc(n * sizeof(double));

	for (int i = 0; i < n; ++i) {
		x[i] = i * dx;
		y[i] = 0;
	}

	scale = slope_xyscale_new();
	slope_chart_add_scale(SLOPE_CHART(chart), scale);

	series = slope_xyseries_new_filled("Wave", x, y, n, "b-");
	slope_xyscale_set_x_range(SLOPE_XYSCALE(scale), 0, (n-1)*dx);
	slope_xyscale_set_y_range(SLOPE_XYSCALE(scale), -1, 1);
  
	g_timeout_add(30, (GSourceFunc) timer_callback, (gpointer) chart);
	gtk_widget_show_all(chart);
	gtk_main();

	g_free(x);
	g_free(y);


}
